owatchGetValue(3)
=================
Victor Semizarov <vitkinet@gmail.com>

NAME
----
owatchGetValue - ...


SYNOPSIS
--------
*#include <optikus/watch.h>*

*oret_t  owatchGetValue (ooid_t 'ooid', oval_t $$*$$'pvalue', char $$*$$'data_buf', int 'buf_len')*;


DESCRIPTION
-----------
This non-blocking routine stores the last received value of the data sample
with given identifier in the user buffer of the *oval_t* type.

If the identifier is not registered, the routine returns 'ERROR'.
If identifier is registered, and values were received from containing subject
at least once, the routine returns 'OK'.

On success the routine fills the following fields of the pvalue structure:
  'type', 'len', 'undef', 'v', 'time'.
Meaning of the fields is described on the *owatchAddDataHandler()* page.

For all data types but strings, the 'data_buf' and 'buf_len' arguments are
ignored, and the value is returned right in the 'pvalue' fields.

For passing strings a user buffer is required, the 'data_buf' argument should
give its address and 'buf_len' should give its length.
If the buffer address is not null and the size is enough to hold the value,
the string is copied in the buffer, its address is stored in the 'v.v_str' field
of the 'pvalue' structure, and its length including trailing zero is stored
in the 'len' field. Otherwise, all informational fields of the *oval_t $$*$$'pvalue'*
structure will be correctly filled, the string length will be stored in the
'len' field, but 'v.v_str' will be filled with null pointer and the routine
will return 'OK'. This behavior can be used to find the enough string buffer size.
Also, this routine can be helpful to find the actual monitored data type.


NOTE
----
In the current version of the library the 'time' field is not used and is
always equal to zero.


BUGS
----
See the Optikus distribution BUGS file.


RESOURCES
---------
SourceForge: 'http://sourceforge.net/projects/asciidoc'

Main web site: 'http://optikus.sourceforge.net'


COPYING
-------
Copyright \(C) 2006-2007 vitki.net.
The Optikus library is free software. You can redistribute and/or
modify it under the the terms of the GNU General Public License (GPL).


